name: MyTestWorkflow
env:
  APP_NAME: "My test APP"
  APP_ENV: "Demo"
  REGISTRY: "115837342064.dkr.ecr.eu-central-1.amazonaws.com"
  REPOSITORY: "muzzle/muzzle"
#  IMAGE_TAG:

on: 
  push:
    branches:
    - demo

jobs:
  my-1st:
    runs-on: ubuntu-latest

    steps:
    - name: clone
      uses: actions/checkout@v3

    - name: Jobe ls
      run: ls -la 

    - name: cat envs
      run: |
        echo "${{ env.APP_NAME }}"
        echo "${{ env.APP_ENV }}"

#    - name: Get next version
#      uses: reecetech/version-increment@2024.10.1
#      id: version
#      with:
#        scheme: semver
#        increment: patch

    - name: Bump release version
      id: bump_version
      uses: christian-draeger/increment-semantic-version@1.0.3
      with:
        current-version: '1.0.3'
        version-fragment: 'bug'
    - name: Do something with your bumped release version
      run: echo ${{ steps.bump_version.outputs.next-version }}
#    - name: build docker
#      run: docker build -t muzzle/muzzle:v1.00 .

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4 
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
        aws-region: eu-central-1
        

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

#    - name: Build, tag, and push docker image to Amazon ECR
#      env:
#        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#        REPOSITORY: ${{ env.REPOSITORY }}
#        IMAGE_TAG: ${{ github.sha }}
#      run: |
#        docker build -t ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.APP_ENV }}-${{ steps.version.outputs.v-version }} .
#        docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.APP_ENV }}1.0.${{ github.run_number}}

#        docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:$IMAGE_TAG


    - name: show images
      run: docker images      


#    - name: Login to DockerHub Registry
#      run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

#    - name: docker push
#      run: docker push muzzle/muzzle:v1.00
    
#  my-2nd:
#    runs-on: ubuntu-latest
#    needs: [my-1st]

#    steps:
#    - name: 2nd Jobe
#      run: echo "Starting 2nd job" && df -h
